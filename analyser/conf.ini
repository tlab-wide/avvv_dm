[ros2]

rosbag_files_directory = ""

topics = ["/tf","/signal_info/dm","/object_info/dm","/freespace_info/dm"]

[rsus]

rsu_info = {"1": {"xy": [4248.971, 73445.545]}, "2": {"xy": [4512.198, 72932.515]}, "3": {"xy": [4856.297, 73143.781]}, "4": {"xy": [5175.195, 73128.254]}}

[csv]

csv_files_directory = ""

; Protocol name must be one of: SignalInfo, ObjectInfo, FreespaceInfo
dm_protocols = ["SignalInfo", "ObjectInfo", "FreespaceInfo"]

[output]

report_output_address = ""

rosbag_output_address = ""

file_name = "avvv"

network_status_topic_name_syntax = "network_status"

topics_equivalent_to_ros2_topics = [["/tf", "/tf"] , ["/signal_info/dm", "/signal_info"] , ["/object_info/dm", "/object_info"] , ["/freespace_info/dm", "/freespace_info"]]

network_status_time = 1

[advance]

simulation = "False"

# are you want to reading rosbag2 output file and writing that in ros2_output_messages.txt
creating_txtFile_from_outputRos_file = "True"

csv_files = "True"

# graphs
graphs_style = "default"
# you can use any matplotlib standard styles name ( important styles = "default" and "dark_background" )

time_reporter = "True"

position_reporter = "True"

distance_reporters = "True"

rsu_only_graphs = "True"

showing_graphs = "False"

save_graphs_image = "True"

save_graphs_csv = "True"

save_graphs_pdf = "False"

save_graphs_pickle = "True"

# not completed
position_reporter_grid_x_size = 10
position_reporter_grid_y_size = 10
position_reporter_grid_z_size = 10

# The maximum acceptable difference to find tf message equivalent to packet time (from obu rosbag file)
max_difference_time_for_equivalent_tf_message = 100000000000000000000

rsu_effective_distance = 300

online_graph_display_speed = 1000

[position_reporter_packet_loss]

packet_loss_color = "red"

packet_color = "green"

just_show_packet_loss = "True"

packet_loss_point_size = 0.5

packet_point_size = 0.01


[position_reporter_delay]

packet_size = 10

[csv_files]

csv_topics = ["tf", "network_status", "cpmn","cpm"]
